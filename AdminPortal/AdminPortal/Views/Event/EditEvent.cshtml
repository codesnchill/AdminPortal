@{
    Layout = "../Shared/_Layout.cshtml";
}

@model IEnumerable<AdminPortal.Models.Event>

@section Scripts {
    <script src="~/Script/select2.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="~/Script/tokenHelper.js"></script>
    <script type="text/javascript" src="~/Script/baseURL.js"></script>
    <script type="text/javascript" src="~/Script/formValidator.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/noty/3.1.4/noty.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/noty/3.1.4/noty.js" type="text/javascript"></script>
    <script>

        $(document).ready(function () {

            $(".mySelect2").select2();

        });

        var baseURL = getBaseURL();

        function loadDepartments(sessionObject) {
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/departments"
            var $loadhandler = jQuery.ajax({
                type: 'GET',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                contentType: "application/json",
                dataType: 'json',
                crossDomain: true,
            });
            $loadhandler.done(function (data, textStatus, jqXHR) {
                $.each(data, function (key, obj) {
                    $("#department").append($("<option></option>")
                        .attr("value", obj.departmentId)
                        .text(obj.departmentName));
                });

                // only call getEventDetails when dropdown has finished loading so select2 can pre-select the departments
                $.when(tokenIsValid, getTokenSession(getEventDetails));
            });
        }
        $.when(tokenIsValid, getTokenSession(loadDepartments));


        // Start of getting eventId from addressbar
        var g_eventId = getIdFromAddressBar();
        function getIdFromAddressBar() {
            var urlArray = window.location.href.split('/');
            var id = urlArray[urlArray.length - 1];
            return id;
        }


        function getEventDetails(sessionObject) {
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/events/" + g_eventId
            $loadUserDataHandler = jQuery.ajax({
                type: 'GET',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                contentType: "application/json",
                dataType: 'json',
                crossDomain: true,
            })
            $loadUserDataHandler.done(function (data, textStatus, jqXHR) {
                console.log(data);
                var events = data;
                var startDateTime = events[0].startDateTime;
                var endDateTime = events[0].endDateTime;
                eventName = events[0].eventName;
                eventDescription = events[0].eventDescription;
                var departmentId = events[0].departmentId.split(',');

                var startDate = startDateTime;
                console.log("Retrieved Start Date: " + startDate);
                startDate = startDate.split('T')[0];
                console.log("Retrieved Start Date after split: " + startDate);
                var startTime = startDateTime;
                startTime = startTime.split('T')[1];
                //  startTime = startTime + ".000Z";

                var endDate = endDateTime;
                endDate = endDate.split('T')[0];
                var endTime = endDateTime;
                endTime = endTime.split('T')[1];
                // endTime = endTime + ".000Z";

                console.log("Start Date: " + startDate + " Start Time: " + startTime);
                console.log("End Date: " + endDate + " End Time: " + endTime);
                console.log("Departments: " + departmentId)
                $('#startDate').val(startDate);
                $('#endDate').val(endDate);
                $('#startTime').val(startTime);
                $('#endTime').val(endTime);
                $('#eventName').val(eventName);
                $('#eventDescription').val(eventDescription);
                $("#department").val(departmentId).select2().trigger('change');;



                //$('#department option').filter(function () {
                //    return $(this).val() == departmentId;
                //}).prop('selected', true);

            }) //end of done
        }
        //$.when(tokenIsValid, getTokenSession(getEventDetails));



        //Using a function technique to define a JavaScript class, WebFormData
        function WebFormData(inCollectedStartDateTime, inCollectedEndDateTime,
            inCollectedEventName, inCollectedEventDescription, inCollectedDepartmentId, inCUDBy) {
            this.startDateTime = inCollectedStartDateTime;
            this.endDateTime = inCollectedEndDateTime;
            this.EventName = inCollectedEventName;
            this.EventDescription = inCollectedEventDescription;
            this.DepartmentList = inCollectedDepartmentId;
            this.CUDBy = inCUDBy;

        }

        function save(sessionObject) {
            var collectedStartDate = $('#startDate').val();
            var collectedEndDate = $('#endDate').val();
            var collectedStartTime = $('#startTime').val();
            var collectedEndTime = $('#endTime').val();
            var collectedEventName = $('#eventName').val();
            var collectedEventDescription = $('#eventDescription').val();
            var collectedDepartment = $('#department').val();
            bearerToken = sessionObject.Token1; // this
            var collectedCUDBy = $('#employeeId').text();



            var collectedStartDateTime = collectedStartDate + ' ' + collectedStartTime;
            var collectedStartDateTime2 = convertUTCDateToLocalDate(new Date(collectedStartDateTime));
            //collectedStartDateTime2 = collectedStartDateTime.replace('Z', '').replace('.000', '').replace(/\s+/, 'T');
            collectedStartDateTime2 = moment(collectedStartDateTime).format("YYYY-MM-DD[T]HH:mm:ss");

            var collectedEndDateTime = collectedEndDate + ' ' + collectedEndTime;
            var collectedEndDateTime2 = convertUTCDateToLocalDate(new Date(collectedEndDateTime));
            //collectedEndDateTime2 = collectedEndDateTime.replace('Z', '').replace('.000', '').replace(/\s+/, 'T');
            collectedEndDateTime2 = moment(collectedEndDateTime).format("YYYY-MM-DD[T]HH:mm:ss");

            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData = new WebFormData(collectedStartDateTime2, collectedEndDateTime2,
                collectedEventName, collectedEventDescription, collectedDepartment, collectedCUDBy);
            //Convert the webFromData into a JSON string
            var webFormDataInString = JSON.stringify(webFormData);

            console.log("Event Details: " + webFormDataInString);

            var url = baseURL + "/api/v1/events/" + g_eventId;
            $updateCourseHandler = jQuery.ajax({
                type: 'PUT',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                dataType: 'json',
                contentType: 'application/json;',
                data: "'" + webFormDataInString + "'"
            })//end of jQuery.ajax() call
            $updateCourseHandler.done(function (data, textStatus, jqXHR) {
                alert("Event Updated Successfully");
                location.href = "/Event/EditEvent/" + g_eventId;

            });//end of $updateCourseHandler.done()

            $updateCourseHandler.error(function (data, textStatus, jqXHR) {
                //  console.log(data.responseJSON.message);
            });//end of $updateCourseHandler.error()*/
        }

        function saveEvent() {
            if (formIsValid()) {
                $.when(tokenIsValid, getTokenSession(save));
            }
        }


        function convertUTCDateToLocalDate(date) {
            var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);

            var offset = date.getTimezoneOffset() / 60;
            var hours = date.getHours();

            newDate.setHours(hours - offset);

            return newDate;
        }

        function WebFormDataForDelete(inCUDBy) {
            this.CUDBy = inCUDBy;
        }

        function deleteEvent(sessionObject) {
            bearerToken = sessionObject.Token1; // this
            var collectedCUDBy = $('#employeeId').text();
            var webFormData = new WebFormDataForDelete(collectedCUDBy);
            var webFormDataInString = JSON.stringify(webFormData);
            var noty = new Noty({
                text: 'Continue the delete action?',
                layout: 'center',
                template: '<div class="noty_message" style="height:50px;"><span class="noty_text"></span>',
                buttons: [
                    Noty.button('Cancel', 'btn btn-default', function () {
                        noty.close();
                    }),

                    Noty.button('Delete', 'btn btn-danger', function () {
                        var url = baseURL + "/api/v1/events/markdelete/" + g_eventId;
                        $deleteHandler = jQuery.ajax({
                            type: 'DELETE',
                            beforeSend: function (request) {
                                request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                            },
                            url: url,
                            dataType: 'json',
                            contentType: 'application/json;',
                            data: "'" + webFormDataInString + "'"
                        })//end of jQuery.ajax() call

                        $deleteHandler.done(function (data, textStatus, jqXHR) {
                            $('body').fadeOut(500, redirectPage);
                            noty.close();
                        })

                        $deleteHandler.fail(function (data, textStatus, jqXHR) {
                            console.log(data);
                            new Noty({
                                text: data.responseJSON.message, type: 'error',
                                layout: 'center',
                                template: '<div class="noty_message"><span class="noty_text"></span>'
                            }).show();//end of noty()
                        });//end of $deleteCourseHandler.fail()
                    })
                ]
            }).show();
        }//end of on click


        // check if all the fields in the form is valid
        function formIsValid() {

            var valid = true;
            var errorMsg = "";

            //check if startDate, startTime, endDate, endTime are valid
            var dateTimeObj = dateTimeIsNotEmpty($('#startDate').val())
            if (!dateTimeObj.isValid) {
                valid = dateTimeObj.isValid;
                console.log(dateTimeObj.errorMsg.toString())
                // show error msg here
                $('#hiddenField').show().text(dateTimeObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                $('#hiddenField').hide();
                console.log("no more error msg for datetime")
            }

            //check if startDate, startTime, endDate, endTime are valid
            var dateTimeObj2 = dateTimeIsNotEmpty($('#endDate').val())
            if (!dateTimeObj2.isValid) {
                valid = dateTimeObj2.isValid;
                console.log(dateTimeObj2.errorMsg.toString())
                // show error msg here
                $('#hiddenField2').show().text(dateTimeObj2.errorMsg.toString());
            } else {
                // make the error msg disappear
                $('#hiddenField2').hide();
                console.log("no more error msg for datetime")
            }

            //check if startDate, startTime, endDate, endTime are valid
            var dateTimeObj3 = dateTimeIsNotEmpty($('#startTime').val())
            if (!dateTimeObj3.isValid) {
                valid = dateTimeObj3.isValid;
                console.log(dateTimeObj3.errorMsg.toString())
                // show error msg here
                $('#hiddenField3').show().text(dateTimeObj3.errorMsg.toString());
            } else {
                // make the error msg disappear
                $('#hiddenField3').hide();
                console.log("no more error msg for datetime")
            }


            //check if startDate, startTime, endDate, endTime are valid
            var dateTimeObj4 = dateTimeIsNotEmpty($('#endTime').val())
            if (!dateTimeObj4.isValid) {
                valid = dateTimeObj4.isValid;
                console.log(dateTimeObj4.errorMsg.toString())
                // show error msg here
                $('#hiddenField4').show().text(dateTimeObj4.errorMsg.toString());
            } else {
                // make the error msg disappear
                $('#hiddenField4').hide();
                console.log("no more error msg for datetime")
            }

            //check if startDate, startTime, endDate, endTime are valid
            var checkAllTimeObj = dateTimeIsValid($('#startDate').val(),
                $('#startTime').val(),
                $('#endDate').val(),
                $('#endTime').val())
            if (!checkAllTimeObj.isValid) {
                valid = checkAllTimeObj.isValid;
                console.log(checkAllTimeObj.errorMsg.toString())
                // show error msg here
                $('#hiddenField8').show().text(checkAllTimeObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                $('#hiddenField8').hide();
                console.log("no more error msg for datetime")
            }


            // check if event name is valid
            var obj = txtInputIsValid($('#name').val());
            //if valid == false
            if (!obj.isValid) {
                valid = obj.isValid;
                console.log(obj.errorMsg.toString());
                // show error msg here
                $('#hiddenField5').show().text(obj.errorMsg.toString());
            } else {
                // make the error msg disappear
                $('#hiddenField5').hide();
                console.log("no more error msg for datetime")
            }


            // check if event description is valid
            var descriptionObj = txtInputIsValid($('#description').val());
            if (!descriptionObj.isValid) {
                valid = descriptionObj.isValid;
                console.log(descriptionObj.errorMsg.toString())
                // show error msg here
                $('#hiddenField6').show().text(descriptionObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                $('#hiddenField6').hide();
                console.log("no more error msg for description")
            }

            // check if event department is valid
            var departmentObj = departmentDropdownIsValid($('#department').val());
            if (!departmentObj.isValid) {
                valid = departmentObj.isValid;
                console.log(departmentObj.errorMsg.toString())
                // show error msg here
                $('#hiddenField7').show().text(departmentObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                $('#hiddenField7').hide();
                console.log("no more error msg for department")
            }

            console.log(errorMsg);

            return valid;
        }

        function deleteE() {

            $.when(tokenIsValid, getTokenSession(deleteEvent));
        }

        function redirectPage() {
            location.href = "/Event/ManageEvents";
        }

        function view() {
            location.href = "/Event/ManageEvents";
        }

        function viewDeleted() {
            location.href = "/Event/ManageDeletedEvents";
        }
    </script>
}

@section CSS {
    <link rel="stylesheet" href="~/styles/editevent.css">
    <link href="~/css/select2.min.css" rel="stylesheet" />

}

<div class="right-section white-background">
    <div class="title">
        <p class="title-control">Manage Events</p>
    </div>
    <div class="view-buttons">
        <button onclick="view()" class="view-details" type="button">
            View Event Details
        </button>
        <button onclick="viewDeleted()" class="view-deleted" type="button">
            View Deleted Events
        </button>

    </div>
    <hr class="divider">

    <div class="edit-container">
        <div class="title-bar orange-background">
            <p class="panel-header">Edit Event</p>

        </div>
        <div class="noty_message"></div>
        <div class="row1-startDate">
            <label class="normal-weight" for="startDate">Start Date:</label>
            <input type="date" class="form-control" name="startDate" id="startDate">
        </div>
        <span id="hiddenField" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row2-endDate">
            <label class="normal-weight" for="endDate">End Date:</label>
            <input type="date" class="form-control" name="endDate" id="endDate">
        </div>
        <span id="hiddenField2" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row3-startTime">
            <label class="normal-weight" for="startTime">Start Time:</label>
            <input type="time" class="form-control" name="startTime" id="startTime">

        </div>
        <span id="hiddenField3" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row4-endTime">
            <label class="normal-weight" for="endTime">End Time:</label>
            <input type="time" class="form-control" name="endTime" id="endTime">

        </div>
        <span id="hiddenField4" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row5-eventName">
            <label class="normal-weight" for="eventName">Event Name:</label>
            <input type="text" class="form-control" name="eventName" id="eventName">
        </div>
        <span id="hiddenField5" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row6-eventDescription">
            <label class="normal-weight" for="eventDescription">Event Description:</label>
            <input type="text" class="form-control" name="eventDescription" id="eventDescription">
        </div>

        <span id="hiddenField6" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row7-department">
            <label class="normal-weight" for="department">Department:</label>
            <select class="mySelect2" multiple id="department">
            </select>
        </div>
        <span id="hiddenField7" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <span id="hiddenField8" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row8-buttons">
            <button onclick="deleteE()" class="delete">Delete</button>
            <button onclick="saveEvent()" class="save">Save</button>
            <button onclick="redirectPage()" class="cancel">Cancel</button>
        </div>
    </div>


</div>