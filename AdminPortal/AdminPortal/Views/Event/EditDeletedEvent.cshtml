@{
    Layout = "../Shared/_Layout.cshtml";
}

@model IEnumerable<AdminPortal.Models.Event>

@section Scripts {
    <script src="~/lib/noty.min.js"></script>
    <script src="~/Script/select2.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="~/Script/tokenHelper.js"></script>
    <script type="text/javascript" src="~/Script/baseURL.js"></script>
    <link href="~/lib/noty.css" />
    <script>

        $(document).ready(function () {

            $(".mySelect2").select2();

        });

        var baseURL = getBaseURL();

        function loadDepartments(sessionObject) {
                bearerToken = sessionObject.Token1;
                var url = baseURL + "/api/v1/departments"
                var $loadhandler = jQuery.ajax({
                    type: 'GET',
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    contentType: "application/json",
                    dataType: 'json',
                    crossDomain: true,
                });
                $loadhandler.done(function (data, textStatus, jqXHR) {
                    console.log(data);
                    $.each(data, function (key, obj) {
                        //console.log(key)
                        console.log(obj)
                        console.log(obj.departmentName)
                        $("#department").append($("<option></option>")
                            .attr("value", obj.departmentId)
                            .text(obj.departmentName));
                    });
                });
        }
         $.when(tokenIsValid, getTokenSession(loadDepartments));


        // Start of getting eventId from addressbar
        var g_eventId = getIdFromAddressBar();
        function getIdFromAddressBar() {
            var urlArray = window.location.href.split('/');
            var id = urlArray[urlArray.length - 1];
            return id;
        }


        function getEventDetails(sessionObject) {
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/events/" + g_eventId
                $loadUserDataHandler = jQuery.ajax({
                    type: 'GET',
                      beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    contentType: "application/json",
                    dataType: 'json',
                    crossDomain: true,
                })
                $loadUserDataHandler.done(function (data, textStatus, jqXHR) {
                    console.log(data);
                    var events = data;
                    var startDateTime = events[0].startDateTime;
                    var endDateTime = events[0].endDateTime;
                    eventName = events[0].eventName;
                    eventDescription = events[0].eventDescription;
                    var departmentId = events[0].departmentId.split(',');

                    var startDate = startDateTime;
                    console.log("Retrieved Start Date: " + startDate);
                    startDate = startDate.split('T')[0];
                    console.log("Retrieved Start Date after split: " + startDate);
                    var startTime = startDateTime;
                    startTime = startTime.split('T')[1];
                    //  startTime = startTime + ".000Z";

                    var endDate = endDateTime;
                    endDate = endDate.split('T')[0];
                    var endTime = endDateTime;
                    endTime = endTime.split('T')[1];
                    // endTime = endTime + ".000Z";

                    console.log("Start Date: " + startDate + " Start Time: " + startTime);
                    console.log("End Date: " + endDate + " End Time: " + endTime);
                    console.log("Departments: " + departmentId)
                    $('#startDate').val(startDate);
                    $('#endDate').val(endDate);
                    $('#startTime').val(startTime);
                    $('#endTime').val(endTime);
                    $('#eventName').val(eventName);
                    $('#eventDescription').val(eventDescription);
                    $("#department").val(departmentId).select2();



                    //$('#department option').filter(function () {
                    //    return $(this).val() == departmentId;
                    //}).prop('selected', true);

                }) //end of done
        }
         $.when(tokenIsValid, getTokenSession(getEventDetails));



        //Using a function technique to define a JavaScript class, WebFormData
        function WebFormData(inCollectedStartDateTime, inCollectedEndDateTime,
            inCollectedEventName, inCollectedEventDescription, inCollectedDepartmentId, inCUDBy) {

            this.startDateTime = inCollectedStartDateTime;
            this.endDateTime = inCollectedEndDateTime;
            this.EventName = inCollectedEventName;
            this.EventDescription = inCollectedEventDescription;
            this.DepartmentList = inCollectedDepartmentId;
            this.CUDBy = inCUDBy;
        }

        function save() {
            var collectedStartDate = $('#startDate').val();
            var collectedEndDate = $('#endDate').val();
            var collectedStartTime = $('#startTime').val();
            var collectedEndTime = $('#endTime').val();
            var collectedEventName = $('#eventName').val();
            var collectedEventDescription = $('#eventDescription').val();
            var collectedDepartment = $('#department').val();
            var collectedCUDBy = JSON.parse(sessionStorage.getItem('employeeDetailsObject')).employeeId;



            var collectedStartDateTime = collectedStartDate + ' ' + collectedStartTime;
            var collectedStartDateTime2 = convertUTCDateToLocalDate(new Date(collectedStartDateTime));
            collectedStartDateTime2 = collectedStartDateTime.replace('Z', '').replace('.000', '').replace(/\s+/, 'T');


            var collectedEndDateTime = collectedEndDate + ' ' + collectedEndTime;
            var collectedEndDateTime2 = convertUTCDateToLocalDate(new Date(collectedEndDateTime));
            collectedEndDateTime2 = collectedEndDateTime.replace('Z', '').replace('.000', '').replace(/\s+/, 'T');
            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData = new WebFormData(collectedStartDateTime2, collectedEndDateTime2,
                collectedEventName, collectedEventDescription, collectedDepartment, collectedCUDBy);
            //Convert the webFromData into a JSON string
            var webFormDataInString = JSON.stringify(webFormData);

            console.log("Event Details: " + webFormDataInString);

            var url = baseURL + "/api/v1/events/" + g_eventId;
            if (tokenIsValid()) {
                bearerToken = JSON.parse(sessionStorage.getItem('tokenSessionObject')).token;
                $updateCourseHandler = jQuery.ajax({
                    type: 'PUT',
                     beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    dataType: 'json',
                    contentType: 'application/json;',
                    data: "'" + webFormDataInString + "'"
                })//end of jQuery.ajax() call
                $updateCourseHandler.done(function (data, textStatus, jqXHR) {
                    alert("Event Updated Successfully");
                    location.href = "/Event/EditEvent";

                });//end of $updateCourseHandler.done()

                $updateCourseHandler.error(function (data, textStatus, jqXHR) {
                    //  console.log(data.responseJSON.message);
                });//end of $updateCourseHandler.error()*/
            }
        }


        function convertUTCDateToLocalDate(date) {
            var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);

            var offset = date.getTimezoneOffset() / 60;
            var hours = date.getHours();

            newDate.setHours(hours - offset);

            return newDate;
        }



        //Using a function technique to define a JavaScript class, WebFormData
        function WebFormData2(inCollectedReEnabled, inCollectedStartDateTime, inCollectedEndDateTime,
            inCollectedEventName, inCollectedEventDescription, inCollectedDepartmentId, inCUDBy) {
            this.ReEnable = inCollectedReEnabled;
            this.startDateTime = inCollectedStartDateTime;
            this.endDateTime = inCollectedEndDateTime;
            this.EventName = inCollectedEventName;
            this.EventDescription = inCollectedEventDescription;
            this.DepartmentList = inCollectedDepartmentId;
            this.CUDBy = inCUDBy;
        }

        function retrieveEvent() {

            var collectedReEnable = true;
            var collectedStartDate = $('#startDate').val();
            var collectedEndDate = $('#endDate').val();
            var collectedStartTime = $('#startTime').val();
            var collectedEndTime = $('#endTime').val();
            var collectedEventName = $('#eventName').val();
            var collectedEventDescription = $('#eventDescription').val();
            var collectedDepartment = $('#department').val();
            var collectedCUDBy = JSON.parse(sessionStorage.getItem('employeeDetailsObject')).employeeId;
            // Start Date-Time Combined
            var collectedStartDateTime = collectedStartDate + ' ' + collectedStartTime;
            var collectedStartDateTime2 = convertUTCDateToLocalDate(new Date(collectedStartDateTime));
            collectedStartDateTime2 = collectedStartDateTime.replace('Z', '').replace('.000', '').replace(/\s+/, 'T');
            //End Date-Time Combined
            var collectedEndDateTime = collectedEndDate + ' ' + collectedEndTime;
            var collectedEndDateTime2 = convertUTCDateToLocalDate(new Date(collectedEndDateTime));
            collectedEndDateTime2 = collectedEndDateTime.replace('Z', '').replace('.000', '').replace(/\s+/, 'T');
            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData = new WebFormData2(collectedReEnable, collectedStartDateTime2, collectedEndDateTime2,
                collectedEventName, collectedEventDescription, collectedDepartment, collectedCUDBy);
            //Convert the webFromData into a JSON string
            var webFormDataInString = JSON.stringify(webFormData);

            console.log("Event Details: " + webFormDataInString);
            //Convert the webFromData into a JSON string

            var url = baseURL + "/api/v1/events/" + g_eventId;
            if (tokenIsValid()) {

                bearerToken = JSON.parse(sessionStorage.getItem('tokenSessionObject')).token;
                $updateCourseHandler = jQuery.ajax({
                    type: 'PUT',
                      beforeSend: function(request) {
                  request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                    url: url,
                    dataType: 'json',
                    contentType: 'application/json;',
                    data: "'" + webFormDataInString + "'"
                })//end of jQuery.ajax() call
                $updateCourseHandler.done(function (data, textStatus, jqXHR) {
                    alert("Event Updated Successfully");
                    location.href = "/Event/EditDeletedEvent";

                });//end of $updateCourseHandler.done()

                $updateCourseHandler.error(function (data, textStatus, jqXHR) {
                    //  console.log(data.responseJSON.message);
                });//end of $updateCourseHandler.error()*/
            }
        }

        function redirectPage() {
            location.href = "/Event/ManageDeletedEvents";
        }

        function view() {
            location.href = "/Event/ManageEvents";
        }

        function viewDeleted() {
            location.href = "/Event/ManageDeletedEvents";
        }
    </script>
}

@section CSS {
    <link rel="stylesheet" href="~/styles/editevent.css">
    <link href="~/css/select2.min.css" rel="stylesheet" />

}

<div class="right-section white-background">
    <div class="title">
        <p class="title-control">Edit Deleted Events</p>
    </div>
    <div class="view-buttons">
        <button onclick="view()" class="view-details" type="button">
            View Event Details
        </button>
        <button onclick="viewDeleted()" class="view-deleted" type="button">
            View Deleted Events
        </button>

    </div>
    <hr class="divider">

    <div class="edit-container">
        <div class="title-bar orange-background">
            <p class="panel-header">Edit Event</p>

        </div>
        <div class="noty_message"></div>
        <div class="row1-startDate">
            <label class="normal-weight" for="startDate">Start Date:</label>
            <input type="date" class="form-control" name="startDate" id="startDate">
        </div>
        <div class="row2-endDate">
            <label class="normal-weight" for="endDate">End Date:</label>
            <input type="date" class="form-control" name="endDate" id="endDate">
        </div>

        <div class="row3-startTime">
            <label class="normal-weight" for="startTime">Start Time:</label>
            <input type="time" class="form-control" name="startTime" id="startTime">

        </div>
        <div class="row4-endTime">
            <label class="normal-weight" for="endTime">End Time:</label>
            <input type="time" class="form-control" name="endTime" id="endTime">

        </div>
        <div class="row5-eventName">
            <label class="normal-weight" for="eventName">Event Name:</label>
            <input type="text" class="form-control" name="eventName" id="eventName">
        </div>
        <div class="row6-eventDescription">
            <label class="normal-weight" for="eventDescription">Event Description:</label>
            <input type="text" class="form-control" name="eventDescription" id="eventDescription">
        </div>


        <div class="row7-department">
            <label class="normal-weight" for="department">Department:</label>
            <select class="mySelect2" multiple id="department">
            </select>
        </div>
        <div class="row8-buttons">
            <button onclick="retrieveEvent()" class="delete">Retrieve</button>
            <button onclick="save()" class="save">Save</button>
            <button onclick="redirectPage()" class="cancel">Cancel</button>
        </div>
    </div>


</div>
