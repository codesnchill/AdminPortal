@{
    Layout = "../Shared/_Layout.cshtml";
}

@section Scripts {
    <script type="text/javascript" src="~/Script/tokenHelper.js"></script>
    <script type="text/javascript" src="~/Script/baseURL.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/noty/3.1.4/noty.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/noty/3.1.4/noty.js" type="text/javascript"></script>
    <script type="text/javascript" src="~/Script/formValidator.js"></script>
    <script>

           $(document).ready(function() {
            checkId();
           
        });

        //loadEmployeeList
        function loadEmployeeList(sessionObject) {
             console.log(sessionObject);
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/users?deleted=false"
            var $loadhandler = jQuery.ajax({
                type: 'GET',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                contentType: "application/json",
                dataType: 'json',
                crossDomain: true,
            });
            $loadhandler.done(function (data, textStatus, jqXHR) {
                console.log(data);
                $.each(data, function (key, obj) {
                    //console.log(key)
                    console.log(obj)
                    console.log(obj.departmentName)
                    $("#list").append($("<option></option>")
                        .attr("value", obj.employeeId)
                        .text(obj.employeeName));
                });
                 $.when(tokenIsValid, getTokenSession(getGameDetails));
            });
        }


        // check whether to show Employee List Dropdown or Question Textbox
        function checkId() {
            if (gameId == 1) {
                 $.when(tokenIsValid, getTokenSession(loadEmployeeList));
                $('#empList').show();
            }
            else {
               $('#questionText').show();
            }

        }

        // Start of getting gameId from addressbar
        var choiceId1;
        var choiceId2;
        var choiceId3;
        var choiceId4;

        var baseURL = getBaseURL();

        function getGameIdFromAddressBar() {
            var urlArray = window.location.href.split('?');
            var gameId = urlArray[1].split('&')[0].split('=')[1];
            return gameId;
        }

        function getQuestionIdFromAddressBar() {
            var urlArray = window.location.href.split('?');
            var questionId = urlArray[1].split('&')[1].split('=')[1];
            return questionId;
        }

        var gameId = getGameIdFromAddressBar();
        var questionId = getQuestionIdFromAddressBar();


        function getGameDetails(sessionObject) {
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/games/" + gameId + "/questions/" + questionId;
            $loadUserDataHandler = jQuery.ajax({
                type: 'GET',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                contentType: "application/json",
                dataType: 'json',
                crossDomain: true,
            })
            $loadUserDataHandler.done(function (data, textStatus, jqXHR) {
                console.log(data);
                var game = data;
                Question1 = game[0].question1;
                answer = game[0].answer
                Choices = game[0].choices;
                EmployeeId = game[0].employeeId;

                console.log("Question: " + Question1);
                console.log("EmployeeId: " + EmployeeId);
                if (gameId == 1) {
                    $('#list option').filter(function () {
                        return $(this).val() == EmployeeId;
                    }).prop('selected', true);
                   
                } 

                $('#question').val(Question1);
                //change the id of the choices input to the real id (from database) of the choices
                $('#choice1').prop('id', Choices[0].choiceId);
                $('#choice2').prop('id', Choices[1].choiceId);
                $('#choice3').prop('id', Choices[2].choiceId);
                $('#choice4').prop('id', Choices[3].choiceId);

                choiceId1 = Choices[0].choiceId;
                choiceId2 = Choices[1].choiceId;
                choiceId3 = Choices[2].choiceId;
                choiceId4 = Choices[3].choiceId;

                $('#' + choiceId1).val(Choices[0].choice);
                $('#' + choiceId2).val(Choices[1].choice);
                $('#' + choiceId3).val(Choices[2].choice);
                $('#' + choiceId4).val(Choices[3].choice);

                var i = 0;
                var answerId;
                for (i = 0; i < Choices.length; i++) {

                    if (Choices[i].choice == answer) {
                        answerId = Choices[i].choiceId;
                    }
                    $("#answer").append($("<option></option>")
                        .attr("value", Choices[i].choiceId)
                        .text("Choice " + (i + 1)));

                }

                console.log("answerId " + answerId);

                $('#answer option').filter(function () {
                    return $(this).val() == answerId;
                }).prop('selected', true);

                console.log("Choices: " + Choices);
                console.log("Answer: " + answer);

            }) //end of done
        }
       


        //Using a function technique to define a JavaScript class, WebFormData
        function WebFormData(inCollectedQuestion1, inCollectedAnswer, inCollectedChoices, inCollectedEmployeeId, inCUDBy) {
            this.Question = inCollectedQuestion1;
            this.Answer = inCollectedAnswer;
            this.Choices = inCollectedChoices;
              this.EmployeeId = inCollectedEmployeeId;
            this.CUDBy = inCUDBy;
        }

        function save() {
            if (formIsValid()) {
                $.when(tokenIsValid, getTokenSession(clickSave));
            }
        }

        function clickSave(sessionObject) {

            var collectedQuestion = "";
            var employeeID = "";
            // checking which game, so the system knows which value to take for Question1
            if (gameId == 1) {
                var selectedName = $('#list').val();
                employeeID = selectedName;
                collectedQuestion = "";
            } else {
                 collectedQuestion = $('#question').val();
            }
            var collectedChoices = [];
            bearerToken = sessionObject.Token1; // this
            var collectedCUDBy = $('#employeeId').text();
            //get the text input of the choice using the val of answer (choiceId)
            var selectedChoiceId = $('#answer').val();
            var collectedAnswer = $('#' + selectedChoiceId).val();
            var collectedEmployeeId = employeeID;

            var collectedChoicesArray1 = {
                ChoiceId: choiceId1,
                Choice: $('#' + choiceId1).val()
            };

            var collectedChoicesArray2 = {
                ChoiceId: choiceId2,
                Choice: $('#' + choiceId2).val()
            };

            var collectedChoicesArray3 = {
                ChoiceId: choiceId3,
                Choice: $('#' + choiceId3).val()
            };

            var collectedChoicesArray4 = {
                ChoiceId: choiceId4,
                Choice: $('#' + choiceId4).val()
            };
            collectedChoices.push(collectedChoicesArray1, collectedChoicesArray2, collectedChoicesArray3, collectedChoicesArray4);
            console.log(collectedChoices);

            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData = new WebFormData(collectedQuestion,
                collectedAnswer, collectedChoices, collectedEmployeeId, collectedCUDBy);
            //Convert the webFromData into a JSON string
            var webFormDataInString = JSON.stringify(webFormData);

            console.log(webFormDataInString);

            var url = baseURL + "/api/v1/games/" + gameId + "/questions/" + questionId
            $updateCourseHandler = jQuery.ajax({
                type: 'PUT',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                dataType: 'json',
                contentType: 'application/json;',
                data: "'" + webFormDataInString + "'"
            })//end of jQuery.ajax() call
            $updateCourseHandler.done(function (data, textStatus, jqXHR) {
                alert("Question Info Updated Successfully");
                location.href = "/Game/EditQuestion/?gameid=" + gameId + "&questionid=" + questionId;
            });//end of $updateCourseHandler.done()

            $updateCourseHandler.error(function (data, textStatus, jqXHR) {

            });//end of $updateCourseHandler.error()*/
        }

        function WebFormDataForDelete(inCUDBy) {
            this.CUDBy = inCUDBy;
        }

        //add this function
        function onClickDelete() {
            $.when(tokenIsValid, getTokenSession(deleteQuestion));

        }

        //add sessionObject here, and the bearerToken
        // remove iftokenisvalid
        function deleteQuestion(sessionObject) {
            bearerToken = sessionObject.Token1; // this
            var collectedCUDBy = $('#employeeId').text(); // add this
            var webFormData = new WebFormDataForDelete(collectedCUDBy);
            var webFormDataInString = JSON.stringify(webFormData);
            var noty = new Noty({
                text: 'Continue the delete action?',
                layout: 'center',
                //template: '<div class="noty_message" style="height:50px;"><span class="noty_text"></span>',
                buttons: [
                    Noty.button('Cancel', 'btn btn-default', function () {
                        noty.close();
                    }),
                    Noty.button('Delete', 'btn btn-danger', function () {
                        var url = baseURL + "/api/v1/games/" + gameId + "/question/" + questionId
                        $deleteHandler = jQuery.ajax({
                            type: 'DELETE',
                            beforeSend: function (request) {
                                request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                            },
                            url: url,
                            dataType: 'json',
                            contentType: 'application/json;',
                            data: "'" + webFormDataInString + "'"
                        })//end of jQuery.ajax() call

                        $deleteHandler.done(function (data, textStatus, jqXHR) {
                            $('body').fadeOut(500, redirectPage);
                            noty.close();
                        })

                        $deleteHandler.fail(function (data, textStatus, jqXHR) {
                            console.log(data);
                            new Noty({
                                text: data.responseJSON.message, type: 'error',
                                layout: 'center',
                                template: '<div class="noty_message"><span class="noty_text"></span>'
                            }).show();//end of noty()
                        });//end of $deleteCourseHandler.fail()
                    })
                ]
            }).show();
        }

        function redirectPage() {
            location.href = "/Game/ManageGames";
        }

        function clickBack() {
            redirectPage();
        }

        function viewDeleted() {
            location.href = "/Game/ManageDeletedGames";
        }

        function view() {
            location.href = "/Game/ManageGames";
        }

           // check if all the fields in the form is valid
        function formIsValid() {

            var valid = true;
            var errorMsg = "";

         if (gameId == 2) {
                // check if employee id is valid
                var questionObj = txtInputIsValid($('#question').val());
                //if valid == false
                if (!questionObj.isValid) {
                    valid = questionObj.isValid;
                    console.log(questionObj.errorMsg.toString());
                    // show error msg here
                    $('#hiddenField').show().text(questionObj.errorMsg.toString());
                } else {
                    // make the error msg disappear
                    $('#hiddenField').hide();
                    console.log("no more error msg for datetime")
                }

            }

            //check if employeeList is valid
            if (gameId == 1) {
                   var empListObj = departmentDropdownIsValid($('#list').val());
            if (!empListObj.isValid) {
                valid = empListObj.isValid;
                console.log(empListObj.errorMsg.toString())
                // show error msg here
                  $('#hiddenField').show().text(empListObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField').hide();
                console.log("no more error msg for department")
            }
            }

            // check if employee name is valid
            var choice1Obj = txtInputIsValid($('.choice1').val());
            if (!choice1Obj.isValid) {
                valid = choice1Obj.isValid;
                console.log(choice1Obj.errorMsg.toString())
                // show error msg here
             $('#hiddenField2').show().text(choice1Obj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField2').hide();
                console.log("no more error msg for description")
            }

                var choice2Obj = txtInputIsValid($('.choice2').val());
            if (!choice2Obj.isValid) {
                valid = choice2Obj.isValid;
                console.log(choice2Obj.errorMsg.toString())
                // show error msg here
             $('#hiddenField3').show().text(choice2Obj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField3').hide();
                console.log("no more error msg for description")
            }

                     var choice3Obj = txtInputIsValid($('.choice3').val());
            if (!choice3Obj.isValid) {
                valid = choice3Obj.isValid;
                console.log(choice3Obj.errorMsg.toString())
                // show error msg here
             $('#hiddenField4').show().text(choice3Obj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField4').hide();
                console.log("no more error msg for description")
            }

                     var choice4Obj = txtInputIsValid($('.choice4').val());
            if (!choice4Obj.isValid) {
                valid = choice4Obj.isValid;
                console.log(choice4Obj.errorMsg.toString())
                // show error msg here
             $('#hiddenField5').show().text(choice4Obj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField5').hide();
                console.log("no more error msg for description")
            }
            console.log(errorMsg);

            return valid;
        }
    </script>
}

@section CSS {
    <link rel="stylesheet" href="~/styles/editquestion.css">
    @*  *@}

<div class="right-section white-background">
    <div class="title">
        <p class="title-control">Manage Games</p>
    </div>
    <div class="view-buttons">
        <button onclick="view()" class="view-details" type="button">
            View Game Details
        </button>
        <button onclick="viewDeleted()" class="view-deleted" type="button">
            View Deleted Details
        </button>

    </div>
    <hr class="divider">

    <div class="edit-container">
        <div class="title-bar orange-background">
            <p class="panel-header">Edit Questions</p>

        </div>
        <div id="empList" class="row1-question" style="display: none;">
            <label class="normal-weight" for="list">Employee:</label>
            <select class="form-control" id="list">
                <option value="" selected disabled hidden>Select an employee...</option>
            </select>
        </div>
        <div id="questionText" class="row1-question" style="display: none;">
            <label class="normal-weight" for="question">Question:</label>
            <input type="text" name="question" id="question">
        </div>
        <span id="hiddenField" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row2-choice1">
            <label class="normal-weight" for="choice1">Choice 1:</label>
            <input type='text' name='choice1' id="choice1" class="choice1" />
        </div>
        <span id="hiddenField2" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row3-choice2">
            <label class="normal-weight" for="choice2">Choice 2:</label>
            <input type='text' name='choice2' id="choice2" class="choice2" />

        </div>
        <span id="hiddenField3" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row4-choice3">
            <label class="normal-weight" for="choice3">Choice 3:</label>
            <input type='text' name='choice3' id="choice3" class="choice3" />
        </div>
        <span id="hiddenField4" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row5-choice4">
            <label class="normal-weight" for="choice4">Choice 4:</label>
            <input type='text' name='choice4' id="choice4" class="choice4" />
        </div>
        <span id="hiddenField5" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row6-answer">
            <label class="normal-weight" for="answer">Answer:</label>
            <select class="form-control" id="answer">
            </select>
        </div>
        <div class="row7-buttons">
            <button onclick="onClickDelete()" class="delete">Delete</button>
            <button onclick="save()" class="save">Save</button>
            <button onclick="clickBack()" class="cancel">Cancel</button>
        </div>
    </div>

</div>

