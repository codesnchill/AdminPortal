@{
    Layout = "../Shared/_Layout.cshtml";
}

@section Scripts {
    <script type="text/javascript" src="~/Script/tokenHelper.js"></script>
    <script type="text/javascript" src="~/Script/baseURL.js"></script>
    <script src="~/lib/noty.min.js"></script>
    <script>
        // Start of getting gameId from addressbar

        var choiceId1;
        var choiceId2;
        var choiceId3;
        var choiceId4;

        var baseURL = getBaseURL();

        function getGameIdFromAddressBar() {
            var urlArray = window.location.href.split('?');
            var gameId = urlArray[1].split('&')[0].split('=')[1];
            return gameId;
        }

        function getQuestionIdFromAddressBar() {
            var urlArray = window.location.href.split('?');
            var questionId = urlArray[1].split('&')[1].split('=')[1];
            return questionId;
        }

        var gameId = getGameIdFromAddressBar();
        var questionId = getQuestionIdFromAddressBar();


        function getGameDetails() {
            if (tokenIsValid()) {
                bearerToken = JSON.parse(sessionStorage.getItem('tokenSessionObject')).token;
                var url = baseURL + "/api/v1/games/" + gameId + "/questions/" + questionId;
                $loadUserDataHandler = jQuery.ajax({
                    type: 'GET',
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    contentType: "application/json",
                    dataType: 'json',
                    crossDomain: true,
                })
                $loadUserDataHandler.done(function (data, textStatus, jqXHR) {
                    console.log(data);
                    var game = data;
                    Question1 = game[0].question1;
                    answer = game[0].answer
                    Choices = game[0].choices;

                    console.log("Question: " + Question1);
                    $('#question').val(Question1);
                    //change the id of the choices input to the real id (from database) of the choices
                    $('#choice1').prop('id', Choices[0].choiceId);
                    $('#choice2').prop('id', Choices[1].choiceId);
                    $('#choice3').prop('id', Choices[2].choiceId);
                    $('#choice4').prop('id', Choices[3].choiceId);

                    choiceId1 = Choices[0].choiceId;
                    choiceId2 = Choices[1].choiceId;
                    choiceId3 = Choices[2].choiceId;
                    choiceId4 = Choices[3].choiceId;

                    $('#' + choiceId1).val(Choices[0].choice);
                    $('#' + choiceId2).val(Choices[1].choice);
                    $('#' + choiceId3).val(Choices[2].choice);
                    $('#' + choiceId4).val(Choices[3].choice);

                    var i = 0;
                    var answerId;
                    for (i = 0; i < Choices.length; i++) {

                        if (Choices[i].choice == answer) {
                            answerId = Choices[i].choiceId;
                        }
                        $("#answer").append($("<option></option>")
                            .attr("value", Choices[i].choiceId)
                            .text("Choice " + (i + 1)));

                    }

                    console.log("answerId " + answerId);

                    $('#answer option').filter(function () {
                        return $(this).val() == answerId;
                    }).prop('selected', true);

                    console.log("Choices: " + Choices);
                    console.log("Answer: " + answer);

                }) //end of done
            }

        }
        getGameDetails();


        //Using a function technique to define a JavaScript class, WebFormData
        function WebFormData(inCollectedQuestion1, inCollectedAnswer, inCollectedChoices, inCUDBy) {
            this.Question = inCollectedQuestion1;
            this.Answer = inCollectedAnswer;
            this.Choices = inCollectedChoices;
            this.CUDBy = inCUDBy;
        }

        function clickSave() {

            var collectedQuestion = $('#question').val();
            var collectedChoices = [];
            var collectedCUDBy = JSON.parse(sessionStorage.getItem('employeeDetailsObject')).employeeId;
            //get the text input of the choice using the val of answer (choiceId)
            var selectedChoiceId = $('#answer').val();
            var collectedAnswer = $('#' + selectedChoiceId).val();

            var collectedChoicesArray1 = {
                ChoiceId: choiceId1,
                Choice: $('#' + choiceId1).val()
            };

            var collectedChoicesArray2 = {
                ChoiceId: choiceId2,
                Choice: $('#' + choiceId2).val()
            };

            var collectedChoicesArray3 = {
                ChoiceId: choiceId3,
                Choice: $('#' + choiceId3).val()
            };

            var collectedChoicesArray4 = {
                ChoiceId: choiceId4,
                Choice: $('#' + choiceId4).val()
            };
            collectedChoices.push(collectedChoicesArray1, collectedChoicesArray2, collectedChoicesArray3, collectedChoicesArray4);
            console.log(collectedChoices);

            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData = new WebFormData(collectedQuestion,
                collectedAnswer, collectedChoices, collectedCUDBy);
            //Convert the webFromData into a JSON string
            var webFormDataInString = JSON.stringify(webFormData);

            console.log(webFormDataInString);

            var url = baseURL + "/api/v1/games/" + gameId + "/questions/" + questionId
            if (tokenIsValid()) {
                bearerToken = JSON.parse(sessionStorage.getItem('tokenSessionObject')).token;
                $updateCourseHandler = jQuery.ajax({
                    type: 'PUT',
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    dataType: 'json',
                    contentType: 'application/json;',
                    data: "'" + webFormDataInString + "'"
                })//end of jQuery.ajax() call
                $updateCourseHandler.done(function (data, textStatus, jqXHR) {
                    $("#messageAlert").show();
                });//end of $updateCourseHandler.done()

                $updateCourseHandler.error(function (data, textStatus, jqXHR) {

                });//end of $updateCourseHandler.error()*/
            }
        }

        function WebFormDataForDelete(inCUDBy) {
            this.CUDBy = inCUDBy;
        }

        function deleteQuestion() {
            var collectedCUDBy = JSON.parse(sessionStorage.getItem('employeeDetailsObject')).employeeId;
            var webFormData = new WebFormDataForDelete(collectedCUDBy);
            var webFormDataInString = JSON.stringify(webFormData);
            var noty = new Noty({
                text: 'Continue the delete action?',
                layout: 'center',
                template: '<div class="noty_message" style="height:50px;"><span class="noty_text"></span>',
                buttons: [
                    Noty.button('Cancel', 'btn btn-default', function () {
                        noty.close();
                    }),

                    Noty.button('Delete', 'btn btn-danger', function () {
                        var url = baseURL + "/api/v1/games/" + gameId + "/question/" + questionId
                        if (tokenIsValid()) {
                            bearerToken = JSON.parse(sessionStorage.getItem('tokenSessionObject')).token;
                            $deleteHandler = jQuery.ajax({
                                type: 'DELETE',
                                beforeSend: function (request) {
                                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                                },
                                url: url,
                                dataType: 'json',
                                contentType: 'application/json;',
                                data: "'" + webFormDataInString + "'"
                            })//end of jQuery.ajax() call

                            $deleteHandler.done(function (data, textStatus, jqXHR) {
                                $('body').fadeOut(500, redirectPage);
                                noty.close();
                            })

                            $deleteHandler.fail(function (data, textStatus, jqXHR) {
                                console.log(data);
                                new Noty({
                                    text: data.responseJSON.message, type: 'error',
                                    layout: 'center',
                                    template: '<div class="noty_message"><span class="noty_text"></span>'
                                }).show();//end of noty()
                            });//end of $deleteCourseHandler.fail()
                        }
                    })
                ]
            }).show();
        }

        function redirectPage() {
            location.href = "/Game/ManageGames";
        }

        function clickBack() {
            redirectPage();
        }

        function viewDeleted() {
            location.href = "/Game/ManageDeletedGames";
        }

        function view() {
            location.href = "/Game/ManageGames";
        }
    </script>
}

@section CSS {
    <link rel="stylesheet" href="~/styles/editquestion.css">
    <link rel="stylesheet" href="~/lib/noty.css" />
}

<div class="right-section white-background">
    <div class="title">
        <p class="title-control">Manage Games</p>
    </div>
    <div class="view-buttons">
        <button onclick="view()" class="view-details" type="button">
            View Game Details
        </button>
        <button onclick="viewDeleted()" class="view-deleted" type="button">
            View Deleted Details
        </button>

    </div>
    <hr class="divider">

    <div class="edit-container">
        <div class="title-bar orange-background">
            <p class="panel-header">Edit Questions</p>

        </div>
        <div id="messageAlert" style="display:none" class="alert alert-success" role="alert">
            Updated Successfully
        </div>
        <div class="row1-question">
            <label class="normal-weight" for="question">Question:</label>
            <input type="text" name="question" id="question">
        </div>
        <div class="row2-choice1">
            <label class="normal-weight" for="choice1">Choice 1:</label>
            <input type='text' name='choice1' id="choice1" />
        </div>
        <div class="row3-choice2">
            <label class="normal-weight" for="choice2">Choice 2:</label>
            <input type='text' name='choice2' id="choice2" />

        </div>
        <div class="row4-choice3">
            <label class="normal-weight" for="choice3">Choice 3:</label>
            <input type='text' name='choice3' id="choice3" />
        </div>
        <div class="row5-choice4">
            <label class="normal-weight" for="choice4">Choice 4:</label>
            <input type='text' name='choice4' id="choice4" />
        </div>
        <div class="row6-answer">
            <label class="normal-weight" for="answer">Answer:</label>
            <select class="form-control" id="answer">
            </select>
        </div>

        <div class="row7-buttons">
            <button onclick="deleteQuestion()" class="delete">Delete</button>
            <button onclick="clickSave()" class="save">Save</button>
            <button onclick="clickBack()" class="cancel">Cancel</button>
        </div>
    </div>

</div>

