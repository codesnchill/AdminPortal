@{
    Layout = "../Shared/_Layout.cshtml";

}

@model IEnumerable<AdminPortal.Models.Employee>

@section Scripts {
    <script type="text/javascript" src="~/Script/tokenHelper.js"></script>
    <script type="text/javascript" src="~/Script/baseURL.js"></script>
    <script>


        function viewUser() {
            location.href = "/User/ManageUser";
        }

        function viewDeletedUser() {
            location.href = "/User/ManageDeletedUser";
        }


       var baseURL = getBaseURL();

        function loadDepartments(sessionObject) {
               bearerToken = sessionObject.Token1;
                var url = baseURL + "/api/v1/departments"
                var $loadhandler = jQuery.ajax({
                    type: 'GET',
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    contentType: "application/json",
                    dataType: 'json',
                    crossDomain: true,
                });
                $loadhandler.done(function (data, textStatus, jqXHR) {
                    console.log(data);
                    $.each(data, function (key, obj) {
                        //console.log(key)
                        console.log(obj)
                        console.log(obj.departmentName)
                        $("#department").append($("<option></option>")
                            .attr("value", obj.departmentId)
                            .text(obj.departmentName));
                    });
                });
        }
        $.when(tokenIsValid, getTokenSession(loadDepartments));


         function loadRoles(sessionObject) {
                bearerToken = sessionObject.Token1;
                var url = baseURL + "/api/v1/roles"
                var $loadhandler = jQuery.ajax({
                    type: 'GET',
                    beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    contentType: "application/json",
                    dataType: 'json',
                    crossDomain: true,
                });
                $loadhandler.done(function (data, textStatus, jqXHR) {
                    console.log(data);
                    $.each(data, function (key, obj) {
                        //console.log(key)
                        console.log(obj)
                        console.log(obj.roleName)
                        $("#rights").append($("<option></option>")
                            .attr("value", obj.roleId)
                            .text(obj.roleName));
                    });
                });
        }
          $.when(tokenIsValid, getTokenSession(loadRoles));


        // Start of getting userId from addressbar
        var g_userId = getIdFromAddressBar();
        function getIdFromAddressBar() {
            var urlArray = window.location.href.split('/');
            var id = urlArray[urlArray.length - 1];
            return id;
        }



        
        function getUserDetails(sessionObject) {
                bearerToken = sessionObject.Token1;
                var url = baseURL + "/api/v1/users/" + g_userId
                //var url = "https://localhost:44300/api/v1/users/" + g_userId
                $loadUserDataHandler = jQuery.ajax({
                    type: 'GET',
                    beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    contentType: "application/json",
                    dataType: 'json',
                    crossDomain: true,
                })
                $loadUserDataHandler.done(function (data, textStatus, jqXHR) {
                    console.log(data);
                    var user = data;
                    employeeId = user[0].employeeId
                    employeeName = user[0].employeeName;
                    departmentName = user[0].departmentName;
                    departmentId = user[0].departmentID;
                    roles = user[0].roles.rolesName;
                    isDisabled = user[0].isDisabled;

                    console.log("Employee ID: " + employeeId + " Employee Name:" + employeeName);

                    $('#employeeID').val(employeeId);
                    $('#employeeName').val(employeeName);


                    $('#department option').filter(function () {
                        return $(this).val() == departmentId;
                    }).prop('selected', true);

                    $('#rights option').filter(function () {
                        return $(this).text() == roles;
                    }).prop('selected', true);

                    $('#status option').filter(function () {

                        var value = 'Active';

                        if (isDisabled == true) {
                            value = 'Inactive';
                        }

                        return $(this).text() == value;
                    }).prop('selected', true);

                }) //end of done
        }
          $.when(tokenIsValid, getTokenSession(getUserDetails));

        //Using a function technique to define a JavaScript class, WebFormData
        function WebFormData(inCollectedEmployeeName, inCollectedDepartmentId, inCollectedRole, inCollectedStatus, inCollectedAdmin, inCollectCUDBy) {
            this.EmployeeName = inCollectedEmployeeName;
            this.DepartmentId = inCollectedDepartmentId;
            this.RoleId = inCollectedRole;
            this.IsDisabled = inCollectedStatus;
            this.IsAdmin = inCollectedAdmin;
            this.CUDBy = inCollectCUDBy;
        }

        function save(sessionObject) {

            var collectedEmployeeName = $('#employeeName').val();
            var collectedDepartmentId = $('#department').val();
            var collectedRole = $('#rights').val();
            var collectedStatus = $('#status').val();
              var collectedAdmin = $('#admin').val();
               bearerToken = sessionObject.Token1; // this
            var collectedCUDBy = $('#employeeId').text();

            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData = new WebFormData(collectedEmployeeName,
                collectedDepartmentId, collectedRole, collectedStatus, collectedAdmin, collectedCUDBy);
            //Convert the webFromData into a JSON string
            var webFormDataInString = JSON.stringify(webFormData);

            console.log(webFormDataInString);

            var url = baseURL + "/api/v1/users/" + g_userId
            //var url = "https://localhost:44300/api/v1/users/" + g_userId
                $updateCourseHandler = jQuery.ajax({
                    type: 'PUT',
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    dataType: 'json',
                    contentType: 'application/json;',
                    data: "'" + webFormDataInString + "'"
                })//end of jQuery.ajax() call
                $updateCourseHandler.done(function (data, textStatus, jqXHR) {
                    $("#messageAlert").show();
                });//end of $updateCourseHandler.done()

                $updateCourseHandler.error(function (data, textStatus, jqXHR) {
                    console.log(data.responseJSON.message);
                });//end of $updateCourseHandler.error()*/
        }
        function saveUser() {
              $.when(tokenIsValid, getTokenSession(save));
        }

        function redirectPage() {
            location.href = "/User/ManageDeletedUser";
        }

        function clickback() {
            redirectPage();
        }

    </script>
}

@section CSS {
    <link rel="stylesheet" href="~/styles/edituser.css">
}

<div class="right-section white-background">
    <div class="title">
        <p class="title-control">Manage Users</p>
    </div>
    <div class="view-buttons">
        <button onclick="viewUser()" class="view-details" type="button">
            View User Details
        </button>
        <button onclick="viewDeletedUser()" class="view-deleted" type="button">
            View Deleted Users
        </button>

    </div>
    <hr class="divider">

    <div class="edit-container">
        <div class="title-bar orange-background">
            <p class="panel-header">Edit Deleted User</p>

        </div>
        <div id="messageAlert" style="display:none" class="alert alert-success" role="alert">
            Updated Successfully
        </div>
        <div class="row1-employeeID">
            <label class="normal-weight" for="employeeID">Employee ID:</label>
            <input type="text" name="employeeID" id="employeeID" readonly>
        </div>
        <div class="row2-employeeName">
            <label class="normal-weight" for="employeeName">Employee Name:</label>
            <input type='text' name='employeeName' id="employeeName" />
        </div>
        <div class="row3-department">
            <label class="normal-weight" for="department">Department:</label>
            <select class="form-control" id="department">
            </select>
        </div>
        <div class="row4-roles">
            <label class="normal-weight" for="rights">Roles:</label>
            <select class="form-control" id="rights">
            </select>
        </div>
        <div class="row8-rights">
            <label class="normal-weight" for="admin">Access Rights:</label>
            <select class="form-control" id="admin">
                <option value="false">User</option>
                <option value="true">Admin</option>
            </select>
        </div>
        <div class="row5-status">
            <label class="normal-weight" for="status">Account Status:</label>
            <select class="form-control" id="status">
                <option value="false">Active</option>
                <option value="true">Inactive</option>
            </select>
        </div>
        <div class="row6-buttons">
            <button onclick="saveUser()" class="save">Save</button>
            <button onclick="clickback()" class="cancel">Cancel</button>
        </div>
    </div>


</div>
