@{
    Layout = "../Shared/_Layout.cshtml";

}

@model IEnumerable<AdminPortal.Models.Employee>

@section Scripts {
    <script type="text/javascript" src="~/Script/tokenHelper.js"></script>
    <script type="text/javascript" src="~/Script/baseURL.js"></script>
    <script type="text/javascript" src="~/Script/formValidator.js"></script>
    <script>


        function viewUser() {
            location.href = "/User/ManageUser";
        }

        function viewDeletedUser() {
            location.href = "/User/ManageDeletedUser";
        }

        var baseURL = getBaseURL();

        function loadDepartments(sessionObject) {
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/departments"
            var $loadhandler = jQuery.ajax({
                type: 'GET',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                contentType: "application/json",
                dataType: 'json',
                crossDomain: true,
            });
            $loadhandler.done(function (data, textStatus, jqXHR) {
                console.log(data);
                $.each(data, function (key, obj) {
                    //console.log(key)
                    console.log(obj)
                    console.log(obj.departmentName)
                    $("#department").append($("<option></option>")
                        .attr("value", obj.departmentId)
                        .text(obj.departmentName));
                });
            });
        }
        $.when(tokenIsValid, getTokenSession(loadDepartments));

        function loadRoles(sessionObject) {
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/roles"
            var $loadhandler = jQuery.ajax({
                type: 'GET',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                contentType: "application/json",
                dataType: 'json',
                crossDomain: true,
            });
            $loadhandler.done(function (data, textStatus, jqXHR) {
                console.log(data);
                $.each(data, function (key, obj) {
                    //console.log(key)
                    console.log(obj)
                    console.log(obj.roleName)
                    $("#rights").append($("<option></option>")
                        .attr("value", obj.roleId)
                        .text(obj.roleName));
                });
            });
        }
        $.when(tokenIsValid, getTokenSession(loadRoles));


        // Start of getting userId from addressbar
        var g_userId = getIdFromAddressBar();
        function getIdFromAddressBar() {
            var urlArray = window.location.href.split('/');
            var id = urlArray[urlArray.length - 1];
            return id;
        }



        function getUserDetails(sessionObject) {
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/users/" + g_userId
            //var url = "https://localhost:44300/api/v1/users/" + g_userId
            $loadUserDataHandler = jQuery.ajax({
                type: 'GET',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                contentType: "application/json",
                dataType: 'json',
                crossDomain: true,
            })
            $loadUserDataHandler.done(function (data, textStatus, jqXHR) {
                console.log(data);
                var user = data;
                employeeId = user[0].employeeId
                employeeName = user[0].employeeName;
                departmentName = user[0].departmentName;
                departmentId = user[0].departmentID;
                roles = user[0].roles.rolesName;
                isDisabled = user[0].isDisabled;

                console.log("Employee ID: " + employeeId + " Employee Name:" + employeeName);

                $('#employeeID').val(employeeId);
                $('#employeeName').val(employeeName);


                $('#department option').filter(function () {
                    return $(this).val() == departmentId;
                }).prop('selected', true);

                $('#rights option').filter(function () {
                    return $(this).text() == roles;
                }).prop('selected', true);

                $('#status option').filter(function () {

                    var value = 'Active';

                    if (isDisabled == true) {
                        value = 'Inactive';
                    }

                    return $(this).text() == value;
                }).prop('selected', true);

            }) //end of done
        }
        $.when(tokenIsValid, getTokenSession(getUserDetails));

        //Using a function technique to define a JavaScript class, WebFormData
        function WebFormData(inCollectedEmployeeName, inCollectedDepartmentId, inCollectedRole, inCollectedStatus, inCollectedAdmin, inCollectedCUDBy) {
            this.EmployeeName = inCollectedEmployeeName;
            this.DepartmentId = inCollectedDepartmentId;
            this.RoleId = inCollectedRole;
            this.IsDisabled = inCollectedStatus;
            this.IsAdmin = inCollectedAdmin;
            this.CUDBy = inCollectedCUDBy;
        }

        function save(sessionObject) {
            bearerToken = sessionObject.Token1; // this
            var collectedCUDBy = $('#employeeId').text();
            var collectedEmployeeName = $('#employeeName').val();
            var collectedDepartmentId = $('#department').val();
            var collectedRole = $('#rights').val();
            var collectedStatus = $('#status').val();
            var collectedAdmin = $('#admin').val();

         
    
            

            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData = new WebFormData(collectedEmployeeName,
                collectedDepartmentId, collectedRole, collectedStatus, collectedAdmin, collectedCUDBy);
            //Convert the webFromData into a JSON string
            var webFormDataInString = JSON.stringify(webFormData);

            console.log(webFormDataInString);

            var url = baseURL + "/api/v1/users/" + g_userId
            //var url = "https://localhost:44300/api/v1/users/" + g_userId
            $updateCourseHandler = jQuery.ajax({
                type: 'PUT',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                dataType: 'json',
                contentType: 'application/json;',
                data: "'" + webFormDataInString + "'"
            })//end of jQuery.ajax() call
            $updateCourseHandler.done(function (data, textStatus, jqXHR) {
                alert("User Info Updated Successfully");
                location.href = "/User/EditUser/" + g_userId;
            });//end of $updateCourseHandler.done()

            $updateCourseHandler.error(function (data, textStatus, jqXHR) {
                console.log(data.responseJSON.message);
            });//end of $updateCourseHandler.error()*/
        }

        function saveUser() {
            if (formIsValid()) {
                $.when(tokenIsValid, getTokenSession(save));
                $.when(tokenIsValid, getTokenSession(markDelete));
            }
        }

        //WebFormData2
        function WebFormData2(inCollectedStatus, inCollectedReason, inCollectedCUDBy) {
            this.IsDisabled = inCollectedStatus;
            this.ReasonForDeletion = inCollectedReason;
            this.CUDBy = inCollectedCUDBy;
        }

        function markDelete(sessionObject) {
            var collectedStatus = $('#status').val();
            var collectedReason = $('#reason').val();
            bearerToken = sessionObject.Token1; // this
            var collectedCUDBy = $('#employeeId').text();

            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData2 = new WebFormData2(collectedStatus,
                collectedReason, collectedCUDBy);
            //Convert the webFromData into a JSON string
            var webFormDataInString2 = JSON.stringify(webFormData2);

            console.log(webFormDataInString2);

            var url = baseURL + "/api/v1/users/" + g_userId
            //var url = "https://localhost:44300/api/v1/users/" + g_userId
            $updateCourseHandler = jQuery.ajax({
                type: 'DELETE',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                dataType: 'json',
                contentType: 'application/json;',
                data: "'" + webFormDataInString2 + "'"
            })//end of jQuery.ajax() call
            $updateCourseHandler.done(function (data, textStatus, jqXHR) {
                $('body').fadeOut(500, redirectPage);
            });//end of $updateCourseHandler.done()

            $updateCourseHandler.error(function (data, textStatus, jqXHR) {
                console.log(data.responseJSON.message);
            });//end of $updateCourseHandler.error()*/
        }

        function redirectPage() {
            location.href = "/User/ManageUser";
        }

        function clickback() {
            redirectPage();
        }

                   // check if all the fields in the form is valid
        function formIsValid() {

            var valid = true;
            var errorMsg = "";

            // check if employee id is valid
            var obj = txtInputIsValid($('#employeeID').val());
            //if valid == false
            if (!obj.isValid) {
                valid = obj.isValid;
                console.log(obj.errorMsg.toString());
                // show error msg here
            $('#hiddenField').show().text(obj.errorMsg.toString());
            } else {
                // make the error msg disappear
                $('#hiddenField').hide();
                console.log("no more error msg for datetime")
            }


            // check if employee name is valid
            var descriptionObj = txtInputIsValid($('#employeeName').val());
            if (!descriptionObj.isValid) {
                valid = descriptionObj.isValid;
                console.log(descriptionObj.errorMsg.toString())
                // show error msg here
             $('#hiddenField2').show().text(descriptionObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField2').hide();
                console.log("no more error msg for description")
            }

            // check if user department is valid
            var departmentObj = departmentDropdownIsValid($('#department').val());
            if (!departmentObj.isValid) {
                valid = departmentObj.isValid;
                console.log(departmentObj.errorMsg.toString())
                // show error msg here
                  $('#hiddenField3').show().text(departmentObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField3').hide();
                console.log("no more error msg for department")
            }

               // check if user roles is valid
            var roleObj = departmentDropdownIsValid($('#rights').val());
            if (!roleObj.isValid) {
                valid = roleObj.isValid;
                console.log(roleObj.errorMsg.toString())
                // show error msg here
                  $('#hiddenField4').show().text(roleObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField4').hide();
                console.log("no more error msg for department")
            }

              var rightsObj = departmentDropdownIsValid($('#admin').val());
            if (!rightsObj.isValid) {
                valid = rightsObj.isValid;
                console.log(rightsObj.errorMsg.toString())
                // show error msg here
                  $('#hiddenField5').show().text(rightsObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField5').hide();
                console.log("no more error msg for department")
            }

               var statusObj = departmentDropdownIsValid($('#status').val());
            if (!statusObj.isValid) {
                valid = statusObj.isValid;
                console.log(statusObj.errorMsg.toString())
                // show error msg here
                  $('#hiddenField6').show().text(statusObj.errorMsg.toString());
            } else {
                // make the error msg disappear
                  $('#hiddenField6').hide();
                console.log("no more error msg for department")
            }

            // When changing status to Inactive, marking a user as delete
            var descriptionObj = txtInputIsValid($('#reason').val());
             if ($('#status').val() == "true") {
                if (!descriptionObj.isValid) {
                    valid = descriptionObj.isValid;
                    $('#hiddenField7').show().text("Please include the reason for changing the status");
                }
                else {
                    $('#hiddenField7').hide();
                    console.log("no error msg for delete")
                }
            }


            console.log(errorMsg);

            return valid;
        }

        //function deleteValidation() {
        //    var valid = true;
        //    var descriptionObj = txtInputIsValid($('#reason').val());
        //    if ($('#status').val() == "true") {
        //        if (!descriptionObj.isValid) {
        //            valid = descriptionObj.isValid;
        //            $('#hiddenField7').show().text("Please include the reason for changing the status");
        //        }
        //        else {
        //            $('#hiddenField7').hide();
        //            console.log("no error msg for delete")
        //        }
        //    }
        //    return valid;
        //}
    </script>
}

@section CSS {
    <link rel="stylesheet" href="~/styles/edituser.css">
}

<div class="right-section white-background">
    <div class="title">
        <p class="title-control">Manage Users</p>
    </div>
    <div class="view-buttons">
        <button onclick="viewUser()" class="view-details" type="button">
            View User Details
        </button>
        <button onclick="viewDeletedUser()" class="view-deleted" type="button">
            View Deleted Users
        </button>

    </div>
    <hr class="divider">

    <div class="edit-container">
        <div class="title-bar orange-background">
            <p class="panel-header">Edit User</p>

        </div>
        <div class="row1-employeeID">
            <label class="normal-weight" for="employeeID">Employee ID:</label>
            <input type="text" name="employeeID" id="employeeID" readonly>
        </div>
        <span id="hiddenField" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row2-employeeName">
            <label class="normal-weight" for="employeeName">Employee Name:</label>
            <input type='text' name='employeeName' id="employeeName" />
        </div>
        <span id="hiddenField2" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row3-department">
            <label class="normal-weight" for="department">Department:</label>
            <select class="form-control" id="department">
            </select>
        </div>
        <span id="hiddenField3" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row4-roles">
            <label class="normal-weight" for="rights">Roles:</label>
            <select class="form-control" id="rights">
            </select>
        </div>
        <span id="hiddenField4" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row8-rights">
            <label class="normal-weight" for="admin">Access Rights:</label>
            <select class="form-control" id="admin">
                <option value="false">User</option>
                <option value="true">Admin</option>
            </select>
        </div>
        <span id="hiddenField5" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row5-status">
            <label class="normal-weight" for="status">Account Status:</label>
            <select class="form-control" id="status">
                <option value="false">Active</option>
                <option value="true">Inactive</option>
            </select>
        </div>
        <span id="hiddenField6" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row7-reason">
            <label class="normal-weight" for="reason">Reason for change:</label>
            <input type='text' name='reason' id="reason" />
        </div>
        <span id="hiddenField7" style="display: none; text-align: center;
    font-size: 12px; color: red;"></span>
        <div class="row6-buttons">
            <button onclick="saveUser()" class="save">Save</button>
            <button onclick="clickback()" class="cancel">Cancel</button>
        </div>
    </div>


</div>
