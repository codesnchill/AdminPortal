@{
    Layout = "../Shared/_Layout.cshtml";
}

@section Scripts {
    <script src="~/Script/select2.min.js"></script>
    <script type="text/javascript" src="~/Script/tokenHelper.js"></script>
    <script type="text/javascript" src="~/Script/baseURL.js"></script>
     
    <script>

        function viewUser() {
            location.href = "/User/ManageUser";
        }

        function viewDeletedUser() {
            location.href = "/User/ManageDeletedUser";
        }


        //$(document).ready(function () {
        //    $(".mySelect2").select2();
        //});

        var baseURL = getBaseURL();

        function loadDepartments(sessionObject) {
            console.log(sessionObject);
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/departments"
            var $loadhandler = jQuery.ajax({
                type: 'GET',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                contentType: "application/json",
                dataType: 'json',
                crossDomain: true,
            });
            $loadhandler.done(function (data, textStatus, jqXHR) {
                console.log(data);
                $.each(data, function (key, obj) {
                    //console.log(key)
                    console.log(obj)
                    console.log(obj.departmentName)
                    $("#department").append($("<option></option>")
                        .attr("value", obj.departmentId)
                        .text(obj.departmentName));
                });
            });
            }

        $.when(tokenIsValid, getTokenSession(loadDepartments));

        function loadRoles(sessionObject) {
            bearerToken = sessionObject.Token1;
            var url = baseURL + "/api/v1/roles"
            var $loadhandler = jQuery.ajax({
                type: 'GET',
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                },
                url: url,
                contentType: "application/json",
                dataType: 'json',
                crossDomain: true,
            });
            $loadhandler.done(function (data, textStatus, jqXHR) {
                console.log(data);
                $.each(data, function (key, obj) {
                    //console.log(key)
                    console.log(obj)
                    console.log(obj.roleName)
                    $("#rights").append($("<option></option>")
                        .attr("value", obj.roleId)
                        .text(obj.roleName));
                });
            });
            //}
        }
        $.when(tokenIsValid, getTokenSession(loadRoles));

        //Using a function technique to define a JavaScript class, WebFormData
        function WebFormData(inCollectedEmployeeId, inCollectedEmployeeName, inCollectedDepartmentId, inCollectedRole, inCollectedStatus, inCollectedAdmin, inCollectedCUDBy) {
            this.EmployeeId = inCollectedEmployeeId;
            this.EmployeeName = inCollectedEmployeeName;
            this.DepartmentId = inCollectedDepartmentId;
            this.RolesId = inCollectedRole;
            this.IsDisabled = inCollectedStatus;
            this.IsAdmin = inCollectedAdmin;
            this.CUDBy = inCollectedCUDBy;
        }

        function clickSave(sessionObject) {
            var checker = validationChecker();
          
           
            if (checker == true) {
            var collectedEmployeeId = $('#employeeID').val();
            var collectedEmployeeName = $('#employeeName').val();
            var collectedDepartmentId = $('#department').val();
            var collectedRole = $('#rights').val();
            var collectedStatus = $('#status').val();
            var collectedAdmin = $('#admin').val();
            bearerToken = sessionObject.Token1; // this
            var collectedCUDBy = $('#employeeId').text();
            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData = new WebFormData(collectedEmployeeId, collectedEmployeeName,
                collectedDepartmentId, collectedRole, collectedStatus, collectedAdmin, collectedCUDBy);
            //Convert the webFromData into a JSON string
            var webFormDataInString = JSON.stringify(webFormData);

            console.log("JSON RESULTS for add: " + webFormDataInString);

            var url = baseURL + "/api/v1/users"

                $updateCourseHandler = jQuery.ajax({
                    type: 'POST',
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + bearerToken);
                    },
                    url: url,
                    dataType: 'json',
                    contentType: 'application/json;',
                    data: "'" + webFormDataInString + "'"
                })//end of jQuery.ajax() call
                $updateCourseHandler.done(function (data, textStatus, jqXHR) {
                    alert("User added Successfully");
                    location.href = "/User/AddUser";

                });//end of $updateCourseHandler.done()

                $updateCourseHandler.error(function (data, textStatus, jqXHR) {
                    console.log(data.responseJSON.message);
                });//end of $updateCourseHandler.error()*/
                }
        }


        //Using a function technique to define a JavaScript class, WebFormData
        function WebFormData2(inCollectedUsername, inCollectedPassword, inCollectedEmail) {
            this.Username = inCollectedUsername;
            this.Password = inCollectedPassword;
            this.Email = inCollectedEmail;
        }

        function register() {
            var collectedUsername = $('#employeeID').val();
            var collectedPassword = $('#employeeID').val();
            var collectedEmail = $('#email').val();
            //Create a WebFormData object, webFormData. Have its field values
            //populated with the collected course data
            var webFormData2 = new WebFormData2(collectedUsername, collectedPassword,
                collectedEmail);
            //Convert the webFromData into a JSON string
            var webFormDataInString2 = JSON.stringify(webFormData2);

            console.log("JSON RESULTS for register: " + webFormDataInString2);

            var url = "https://localhost:44300/api/v1/signUp"

            $updateRegisterHandler = jQuery.ajax({
                type: 'POST',
                url: url,
                dataType: 'json',
                contentType: 'application/json;',
                data: webFormDataInString2
            })//end of jQuery.ajax() call
            $updateRegisterHandler.done(function (data, textStatus, jqXHR) {
                alert("Registration Success");
            });//end of $updateCourseHandler.done()

            $updateRegisterHandler.error(function (data, textStatus, jqXHR) {
                //console.log(data.responseJSON.message);
            });//end of $updateCourseHandler.error()*/
        }

        function save() {
            $.when(tokenIsValid, getTokenSession(clickSave));
            register();
        }



        function cancel() {
            location.href = "/User/ManageUser";
        }

        function validationChecker() {
            var isValid = true;
            if (!$('#employeeID').val()) {
                $('#hiddenField').show()
                isValid = false;
            }
            if (!$('#employeeName').val()) {
                $('#hiddenField2').show()
                isValid = false;
            }
            if (/^[a-zA-Z0-9- ]*$/.test($('#employeeName')) == false) {
                $('#specialHiddenField').show()
                  isValid = false;
            }
            if ($('#department').val() == "") {
                 $('#hiddenField3').show()
                 isValid = false;
            }


            return isValid;
        }


            
        
    </script>
}

@section CSS {
    <link href="~/styles/adduser.css" rel="stylesheet" />
    <link href="~/css/select2.min.css" rel="stylesheet" />
}

<div class="right-section white-background">
    <div class="title">
        <p class="title-control">Manage Users</p>
    </div>
    <div class="view-buttons">
        <button onclick="viewUser()" class="view-details" type="button">
            View User Details
        </button>
        <button onclick="viewDeletedUser()" class="view-deleted" type="button">
            View Deleted Users
        </button>

    </div>
    <hr class="divider">

    <div class="edit-container">
        <div class="title-bar orange-background">
            <p class="panel-header">Add User</p>

        </div>

        <div class="row1-employeeID">
            <label class="normal-weight" for="employeeID">Employee ID:</label>
            <input type="number" name="employeeID" id="employeeID">
        </div>
        <span id="hiddenField" style="display: none; text-align: center;
    font-size: 12px; color: red;">This field is required</span>
        <div class="row2-employeeName">
            <label class="normal-weight" for="employeeName">Employee Name:</label>
            <input type='text' name='employeeName' id="employeeName" />
        </div>
        <span id="hiddenField2" style="display: none; text-align: center;
    font-size: 12px; color: red;">This field is required</span>
        <span id="specialHiddenField" style="display: none; text-align: center;
    font-size: 12px; color: red;">This field contains illegal characters</span>
        <div class="row3-department">
            <label class="normal-weight" for="department">Department:</label>
            <select class="form-control" id="department">
                <option value="" selected disabled hidden>Select...</option>
            </select>
        </div>
        <span id="hiddenField3" style="display: none; text-align: center;
    font-size: 12px; color: red;">This field is required</span>
        <div class="row4-roles">
            <label class="normal-weight" for="rights">Roles</label>
            <select class="form-control" id="rights">
                <option value="" selected disabled hidden>Select...</option>
            </select>
        </div>
        <div class="row8-rights">
            <label class="normal-weight" for="admin">Access Rights:</label>
            <select class="form-control" id="admin">
                <option value="false">User</option>
                <option value="true">Admin</option>
            </select>
        </div>
        <div class="row5-status">
            <label class="normal-weight" for="status">Account Status:</label>
            <select class="form-control" id="status">
                <option value="" selected disabled hidden>Select...</option>
                <option value="false">Active</option>
                <option value="true">Inactive</option>
            </select>
        </div>
        <div class="row7-email">
            <label class="normal-weight" for="email">Email:</label>
            <input type='text' name='email' id="email" />
        </div>
        <div class="row6-buttons">

            <button onclick="save()" class="save">Save</button>
            <button onclick="cancel()" class="cancel">Cancel</button>
        </div>
    </div>


</div>
